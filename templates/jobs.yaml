---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-job-st2-register-content
  labels:
    app: st2-register-content
    tier: backend
    vendor: stackstorm
    support: enterprise
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    helm.sh/hook: post-install, post-upgrade, post-rollback
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "5"
spec:
  template:
    metadata:
      name: job-st2-register-content
      labels:
        app: st2-register-content
        tier: backend
        vendor: stackstorm
        support: enterprise
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        # TODO: Investigate/propose running Helm hook only on condition when ConfigMap or Secret has changed
        checksum/config: {{ include (print $.Template.BasePath "/configmaps_st2-conf.yaml") . | sha256sum }}
        checksum/packs: {{ include (print $.Template.BasePath "/configmaps_packs.yaml") . | sha256sum }}
    spec:
      {{- if .Values.enterprise.enabled }}
      imagePullSecrets:
      - name: {{ .Release.Name }}-st2-license
      {{- end }}
      {{- if .Values.st2.packs.image.repository }}
      initContainers:
      # Merge packs and virtualenvs from st2actionrunner-enterprise with those from the st2.packs image
      # Custom packs
      - name: st2-custom-packs
        image: "{{ .Values.st2.packs.image.repository }}/{{ .Values.st2.packs.image.name }}:{{ .Values.st2.packs.image.tag }}"
        imagePullPolicy: {{ .Values.st2.packs.image.pullPolicy | quote }}
        volumeMounts:
        - name: st2-packs-vol
          mountPath: /opt/stackstorm/packs-shared
        - name: st2-virtualenvs-vol
          mountPath: /opt/stackstorm/virtualenvs-shared
        command:
          - 'sh'
          - '-ec'
          - |
            /bin/cp -aR /opt/stackstorm/packs/. /opt/stackstorm/packs-shared &&
            /bin/cp -aR /opt/stackstorm/virtualenvs/. /opt/stackstorm/virtualenvs-shared
      # System packs
      - name: st2-system-packs
        image: "{{ .Values.image.repository }}/st2actionrunner-enterprise:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
        - name: st2-packs-vol
          mountPath: /opt/stackstorm/packs-shared
        command:
          - 'sh'
          - '-ec'
          - |
            /bin/cp -aR /opt/stackstorm/packs/. /opt/stackstorm/packs-shared &&
            /bin/cp -aR /opt/stackstorm/virtualenvs/. /opt/stackstorm/virtualenvs-shared
      {{ end }}
      containers:
      - name: st2-register-content
        image: "{{ .Values.image.repository }}/st2actionrunner-enterprise:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - st2-register-content
          - --config-file=/etc/st2/st2.conf
          - --config-file=/etc/st2/st2.docker.conf
          - --config-file=/etc/st2/st2.user.conf
          - --register-all
          - --register-fail-on-failure
        volumeMounts:
        - name: st2-config-vol
          mountPath: /etc/st2/st2.docker.conf
          subPath: st2.docker.conf
        - name: st2-config-vol
          mountPath: /etc/st2/st2.user.conf
          subPath: st2.user.conf
        - name: st2-pack-configs-vol
          mountPath: /opt/stackstorm/configs/
        {{- if .Values.st2.packs.image.repository }}
        - name: st2-packs-vol
          mountPath: /opt/stackstorm/packs/
        - name: st2-virtualenvs-vol
          mountPath: /opt/stackstorm/virtualenvs/
        {{- end }}
        # TODO: Find out default resource limits for this specific service (#5)
        #resources:
      volumes:
        - name: st2-config-vol
          configMap:
            name: {{ .Release.Name }}-st2-config
        - name: st2-pack-configs-vol
          configMap:
            name: {{ .Release.Name }}-st2-pack-configs
        {{- if .Values.st2.packs.image.repository }}
        - name: st2-packs-vol
          emptyDir: {}
        - name: st2-virtualenvs-vol
          emptyDir: {}
        {{- end }}
      restartPolicy: OnFailure

{{ if .Values.enterprise.enabled }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-job-st2-apply-rbac-definitions
  labels:
    app: st2-apply-rbac-definitions
    tier: backend
    vendor: stackstorm
    support: enterprise
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    helm.sh/hook: post-install, post-upgrade, post-rollback
    helm.sh/hook-delete-policy: before-hook-creation
    helm.sh/hook-weight: "6"
spec:
  template:
    metadata:
      name: job-st2-apply-rbac-definitions
      labels:
        app: st2-apply-rbac-definitions
        tier: backend
        vendor: stackstorm
        support: enterprise
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        # TODO: Investigate/propose running Helm hook only on condition when ConfigMap or Secret has changed
        checksum/config: {{ include (print $.Template.BasePath "/configmaps_st2-conf.yaml") . | sha256sum }}
        checksum/rbac: {{ include (print $.Template.BasePath "/configmaps_rbac.yaml") . | sha256sum }}
    spec:
      imagePullSecrets:
      - name: {{ .Release.Name }}-st2-license
      containers:
      - name: st2-apply-rbac-definitions
        image: "{{ .Values.image.repository }}/st2actionrunner-enterprise:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
          - st2-apply-rbac-definitions
          - --verbose
          - --config-file=/etc/st2/st2.conf
          - --config-file=/etc/st2/st2.docker.conf
          - --config-file=/etc/st2/st2.user.conf
        volumeMounts:
        - name: st2-config-vol
          mountPath: /etc/st2/st2.docker.conf
          subPath: st2.docker.conf
        - name: st2-config-vol
          mountPath: /etc/st2/st2.user.conf
          subPath: st2.user.conf
        - name: st2-rbac-roles-vol
          mountPath: /opt/stackstorm/rbac/roles/
        - name: st2-rbac-assignments-vol
          mountPath: /opt/stackstorm/rbac/assignments/
        - name: st2-rbac-mappings-vol
          mountPath: /opt/stackstorm/rbac/mappings/
        # TODO: Find out default resource limits for this specific service (#5)
        #resources:
      volumes:
        - name: st2-config-vol
          configMap:
            name: {{ .Release.Name }}-st2-config
        - name: st2-rbac-roles-vol
          configMap:
            name: {{ .Release.Name }}-st2-rbac-roles
        - name: st2-rbac-assignments-vol
          configMap:
            name: {{ .Release.Name }}-st2-rbac-assignments
        - name: st2-rbac-mappings-vol
          configMap:
            name: {{ .Release.Name }}-st2-rbac-mappings
      restartPolicy: OnFailure
{{ end }}
