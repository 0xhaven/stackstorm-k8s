---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-st2auth-enterprise
spec:
  selector:
    matchLabels:
      app: st2auth
      support: enterprise
      release: {{ .Release.Name }}
  # https://docs.stackstorm.com/reference/ha.html#st2auth
  # Multiple st2auth processes can be behind a load balancer in an active-active configuration.
  replicas: {{ default 2 .Values.st2auth.replicas }}
  template:
    metadata:
      labels:
        app: st2auth
        tier: backend
        vendor: stackstorm
        support: enterprise
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmaps_st2-conf.yaml") . | sha256sum }}
    spec:
      imagePullSecrets:
      - name: {{ .Release.Name }}-st2-license
      # Sidecar container for generating .htpasswd with st2 username & password pair and sharing produced file with the main st2auth container
      initContainers:
      - name: generate-htpasswd
        image: "{{ .Values.image.repository }}/st2auth-enterprise:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 9100
        env:
        - name: ST2_AUTH_USERNAME
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-st2-auth
              key: username
        - name: ST2_AUTH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-st2-auth
              key: password
        volumeMounts:
        - name: htpasswd-vol
          mountPath: /tmp/st2
        command:
          - 'sh'
          - '-ec'
          - printf "${ST2_AUTH_USERNAME}:$(openssl passwd -apr1 "${ST2_AUTH_PASSWORD}")\n" > /tmp/st2/htpasswd
      containers:
      - name: st2auth-enterprise
        image: "{{ .Values.image.repository }}/st2auth-enterprise:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        # TODO: Add liveness/readiness probes (#5)
        #livenessProbe:
        #readinessProbe:
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-st2-urls
        volumeMounts:
        - name: st2-config-vol
          mountPath: /etc/st2/st2.docker.conf
          subPath: st2.docker.conf
        - name: st2-config-vol
          mountPath: /etc/st2/st2.user.conf
          subPath: st2.user.conf
        - name: htpasswd-vol
          mountPath: /etc/st2/htpasswd
          subPath: htpasswd
          readOnly: true
        resources:
{{ toYaml .Values.st2auth.resources | indent 10 }}
      volumes:
        - name: st2-config-vol
          configMap:
            name: {{ .Release.Name }}-st2-config
        - name: htpasswd-vol
          emptyDir:
            medium: Memory
    {{- with .Values.st2auth.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.st2auth.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.st2auth.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-st2api-enterprise
spec:
  selector:
    matchLabels:
      app: st2api
      support: enterprise
      release: {{ .Release.Name }}
  # https://docs.stackstorm.com/reference/ha.html#st2api
  # Multiple st2api process can be behind a load balancer in an active-active configuration.
  replicas: {{ default 2 .Values.st2api.replicas }}
  template:
    metadata:
      labels:
        app: st2api
        tier: backend
        vendor: stackstorm
        support: enterprise
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmaps_st2-conf.yaml") . | sha256sum }}
    spec:
      imagePullSecrets:
      - name: {{ .Release.Name }}-st2-license
      containers:
      - name: st2api-enterprise
        image: "{{ .Values.image.repository }}/st2api-enterprise:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 9101
        # TODO: Add liveness/readiness probes (#5)
        #livenessProbe:
        #readinessProbe:
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-st2-urls
        volumeMounts:
        - name: st2-config-vol
          mountPath: /etc/st2/st2.docker.conf
          subPath: st2.docker.conf
        - name: st2-config-vol
          mountPath: /etc/st2/st2.user.conf
          subPath: st2.user.conf
        resources:
{{ toYaml .Values.st2api.resources | indent 10 }}
      volumes:
        - name: st2-config-vol
          configMap:
            name: {{ .Release.Name }}-st2-config
    {{- with .Values.st2api.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.st2api.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.st2api.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-st2stream-enterprise
spec:
  selector:
    matchLabels:
      app: st2stream
      support: enterprise
      release: {{ .Release.Name }}
  # https://docs.stackstorm.com/reference/ha.html#st2stream
  # Multiple st2stream process can be behind a load balancer in an active-active configuration.
  replicas: {{ default 2 .Values.st2stream.replicas }}
  template:
    metadata:
      labels:
        app: st2stream
        tier: backend
        vendor: stackstorm
        support: enterprise
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmaps_st2-conf.yaml") . | sha256sum }}
    spec:
      imagePullSecrets:
      - name: {{ .Release.Name }}-st2-license
      containers:
      - name: st2stream-enterprise
        image: "{{ .Values.image.repository }}/st2stream-enterprise:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 9102
        # TODO: Add liveness/readiness probes (#5)
        #livenessProbe:
        #readinessProbe:
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-st2-urls
        volumeMounts:
        - name: st2-config-vol
          mountPath: /etc/st2/st2.docker.conf
          subPath: st2.docker.conf
        - name: st2-config-vol
          mountPath: /etc/st2/st2.user.conf
          subPath: st2.user.conf
        resources:
{{ toYaml .Values.st2stream.resources | indent 10 }}
      volumes:
        - name: st2-config-vol
          configMap:
            name: {{ .Release.Name }}-st2-config
    {{- with .Values.st2stream.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.st2stream.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.st2stream.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-st2web-enterprise
spec:
  selector:
    matchLabels:
      app: st2web
      support: enterprise
      release: {{ .Release.Name }}
  replicas: {{ default 2 .Values.st2web.replicas }}
  template:
    metadata:
      labels:
        app: st2web
        tier: frontend
        vendor: stackstorm
        support: enterprise
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        release: {{ .Release.Name }}
        heritage: {{ .Release.Service }}
    spec:
      imagePullSecrets:
      - name: {{ .Release.Name }}-st2-license
      containers:
      - name: st2web-enterprise
        image: "{{ .Values.image.repository }}/st2web-enterprise:{{ .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 443
        # Probe to check if app is running. Failure will lead to a pod restart.
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /
            port: 443
          initialDelaySeconds: 1
        # Probe to check if app is ready to serve traffic. Failure will lead to temp stop serving traffic.
        # TODO: Failing to add readinessProbe, since st2 requires authorization (401) and we don't have `/healthz` endpoints yet (https://github.com/StackStorm/st2/issues/4020)
#        readinessProbe:
#          httpGet:
#            # Probes can't check several endpoints, - this should be implemented on app side (@see https://www.ianlewis.org/en/using-kubernetes-health-checks)
#            # Also multiple liveness checks are not available (@see https://github.com/kubernetes/kubernetes/issues/37218)
#            # So checking ST2_API only
#            scheme: HTTPS
#            path: /api/
#            port: 443
#          initialDelaySeconds: 3
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-st2-urls
            optional: true
        volumeMounts:
        - name: st2web-ssl-cert
          mountPath: /etc/ssl/st2/
          readOnly: true
        resources:
{{ toYaml .Values.st2web.resources | indent 10 }}
      volumes:
      - name: st2web-ssl-cert
        secret:
          secretName: {{ .Release.Name }}-st2web
          items:
          - key: ssl_certificate
            path: st2.crt
            # 0400 file permission
            mode: 256
          - key: ssl_certificate_key
            path: st2.key
            # 0400 file permission
            mode: 256
    {{- with .Values.st2web.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.st2web.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.st2web.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
